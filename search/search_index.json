{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Pr\u00e9sentation Ce projet a pour but cr\u00e9er un serveur \u00e0 la maison qui me permettra d'acc\u00e9der \u00e0 mes fichiers, mes films, mes webapps et un serveur minecraft. Disclaimer Ceci est un projet personnel et est donc adapt\u00e9 \u00e0 mes besoins, envie, moyens, etc.. Il serait possible de monter rapidement un serveur qui r\u00e9pondrait \u00e0 toutes ces attentes mais nous cherchons la performance, la stabilit\u00e9 et surtout un syst\u00e8me qui soit automatis\u00e9 au maximum. Sommaire Ici vous trouverez: De quoi vous mettre en piste Des cours que nous avons r\u00e9dig\u00e9 pour expliquer des technos et des outils Des r\u00e9sum\u00e9s de tutos que nous avons suivi pour \u00e9toffer nos connaissances L'explication et des d\u00e9tails concernant les services que nous souhaitons faire tourner sur le serveur Des archives sur des technologie ou des m\u00e9thodes abandonn\u00e9es Machine utilis\u00e9e Pi\u00e8ce Ref CPU AMD FX 8370 GPU GTX 1060 3 Go M\u00e9moire 16 Go DDR3 Stockage 3x 3To Firecuda Stockage OS 256 Go SSD Carte m\u00e8re MSI 990 FXA Alimentation RM750X","title":"Accueil"},{"location":"#presentation","text":"Ce projet a pour but cr\u00e9er un serveur \u00e0 la maison qui me permettra d'acc\u00e9der \u00e0 mes fichiers, mes films, mes webapps et un serveur minecraft. Disclaimer Ceci est un projet personnel et est donc adapt\u00e9 \u00e0 mes besoins, envie, moyens, etc.. Il serait possible de monter rapidement un serveur qui r\u00e9pondrait \u00e0 toutes ces attentes mais nous cherchons la performance, la stabilit\u00e9 et surtout un syst\u00e8me qui soit automatis\u00e9 au maximum.","title":"Pr\u00e9sentation"},{"location":"#sommaire","text":"Ici vous trouverez: De quoi vous mettre en piste Des cours que nous avons r\u00e9dig\u00e9 pour expliquer des technos et des outils Des r\u00e9sum\u00e9s de tutos que nous avons suivi pour \u00e9toffer nos connaissances L'explication et des d\u00e9tails concernant les services que nous souhaitons faire tourner sur le serveur Des archives sur des technologie ou des m\u00e9thodes abandonn\u00e9es","title":"Sommaire"},{"location":"#machine-utilisee","text":"Pi\u00e8ce Ref CPU AMD FX 8370 GPU GTX 1060 3 Go M\u00e9moire 16 Go DDR3 Stockage 3x 3To Firecuda Stockage OS 256 Go SSD Carte m\u00e8re MSI 990 FXA Alimentation RM750X","title":"Machine utilis\u00e9e"},{"location":"archives/cloud-init/","text":"Utilisation des cloud-init Cloud-init st le standard pour personnaliser des instances cloud. Il est possible de customiser une instance multipass en utilisant cloud-init . Les fichier cloud-init sont des YAML . Construction du fichier.yaml |Commande|Signification|Exemple| |:-|:-|:-| | package_update |Mise \u00e0 jour de la base apt au d\u00e9marrage| True/False | |||| | package |Liste des paquets que je souhaite installer| packages: \u2003- apt-transport-https \u2003- ca-certificates \u2003- curl \u2003- gnupg-agent \u2003- software-properties-common | | runcmd |Liste de commandes \u00e0 ex\u00e9cuter| runcmd: \u2003- apt-get update -y | | final_message |Message affich\u00e9 \u00e0 la fin du premier d\u00e9marrage| \"L'installation \u00e0 \u00e9t\u00e9 r\u00e9alis\u00e9e avec succ\u00e8s | Grace \u00e0 ce script on peut: - Depuis l'instance: + Pinger google ( ping google.com ) Donc on a acc\u00e8s \u00e0 internet - Depuis le server: + Pinger la vm ( ping 10.8.248.188 ) - Depuis le r\u00e9seau: + PAS pinger la vm ( ping 10.8.248.188 ) + Pinger le server ( ping 192.168.1.11 ) Je pense qu'il faudrait exposer la vm sur un port du server. Pour acc\u00e9der a la vm depuis le r\u00e9seau il faudrait faire bind <ip_instance> <no_port> puis donc ping <ip_server>:<port_choisi> J'ai un probl\u00e8me avec ce code: # Create default system user # Edit the name and ssh-authorized-keys according to your needs system_info : default_user : name : louison home : /home/louison shell : /bin/bash lock_passwd : True sudo : ALL=(ALL) NOPASSWD:ALL NOTE: On peut remplacer ifconfig par: alias ifconfig = \"ip -c a | sed -e 's/\\// \\//g'\"","title":"Cloud-init"},{"location":"archives/cloud-init/#utilisation-des-cloud-init","text":"Cloud-init st le standard pour personnaliser des instances cloud. Il est possible de customiser une instance multipass en utilisant cloud-init . Les fichier cloud-init sont des YAML . Construction du fichier.yaml |Commande|Signification|Exemple| |:-|:-|:-| | package_update |Mise \u00e0 jour de la base apt au d\u00e9marrage| True/False | |||| | package |Liste des paquets que je souhaite installer| packages: \u2003- apt-transport-https \u2003- ca-certificates \u2003- curl \u2003- gnupg-agent \u2003- software-properties-common | | runcmd |Liste de commandes \u00e0 ex\u00e9cuter| runcmd: \u2003- apt-get update -y | | final_message |Message affich\u00e9 \u00e0 la fin du premier d\u00e9marrage| \"L'installation \u00e0 \u00e9t\u00e9 r\u00e9alis\u00e9e avec succ\u00e8s | Grace \u00e0 ce script on peut: - Depuis l'instance: + Pinger google ( ping google.com ) Donc on a acc\u00e8s \u00e0 internet - Depuis le server: + Pinger la vm ( ping 10.8.248.188 ) - Depuis le r\u00e9seau: + PAS pinger la vm ( ping 10.8.248.188 ) + Pinger le server ( ping 192.168.1.11 ) Je pense qu'il faudrait exposer la vm sur un port du server. Pour acc\u00e9der a la vm depuis le r\u00e9seau il faudrait faire bind <ip_instance> <no_port> puis donc ping <ip_server>:<port_choisi> J'ai un probl\u00e8me avec ce code: # Create default system user # Edit the name and ssh-authorized-keys according to your needs system_info : default_user : name : louison home : /home/louison shell : /bin/bash lock_passwd : True sudo : ALL=(ALL) NOPASSWD:ALL NOTE: On peut remplacer ifconfig par: alias ifconfig = \"ip -c a | sed -e 's/\\// \\//g'\"","title":"Utilisation des cloud-init"},{"location":"archives/multipass/","text":"Utilisation de multipass Installation de multipass: sudo snap install multipass Action Commande Exemple Liste les multipass disponibles multipass find Lancer/installer une instance: multipass launch <image_name> --name <nom_custom> multipass launch nextcloud --name moncloud Lancer/installer une instance customis\u00e9 avec cloud-init multipass launch -n <image_name> --cloud-init <fichier_init>.yaml multipass launch -n nextcloud --cloud-init init-moncloud.yaml Lister les mes instances (pour r\u00e9cuperer l'IP): multipass list multipass ls Ouvrir un bash: multipass shell <nom_instance> multipass shell moncloud D\u00e9marrer une instance: multipass start <nom_instance> multipass start moncloud Arr\u00eater une instance: multipass stop <nom_instance> multipass stop moncloud Monter un volume multipass mount <nom_volume> <nom_instance> multipass mount $HOME moncloud:/chemain/voulu Transmettre une commande a l'instance multipass exec <nom_instance> -- <la_commande> multipass exec moncloud -- sudo apt update Copier des fichiers multipass copy-files <a_copier> <cible> multipass copy-files moncloud:/chemin/voulu.txt /chemin/local/ multipass copy-files /chemin/local/ moncloud:/chemin/voulu.txt Supprimer une instance multipass delete <nom_instance multipass delete moncloud R\u00e9cup\u00e9rer une instance supprim\u00e9e multipass recover <nom_instance> multipass recover moncloud Purger les instances supprim\u00e9es multipass purge","title":"Multipass"},{"location":"archives/multipass/#utilisation-de-multipass","text":"Installation de multipass: sudo snap install multipass Action Commande Exemple Liste les multipass disponibles multipass find Lancer/installer une instance: multipass launch <image_name> --name <nom_custom> multipass launch nextcloud --name moncloud Lancer/installer une instance customis\u00e9 avec cloud-init multipass launch -n <image_name> --cloud-init <fichier_init>.yaml multipass launch -n nextcloud --cloud-init init-moncloud.yaml Lister les mes instances (pour r\u00e9cuperer l'IP): multipass list multipass ls Ouvrir un bash: multipass shell <nom_instance> multipass shell moncloud D\u00e9marrer une instance: multipass start <nom_instance> multipass start moncloud Arr\u00eater une instance: multipass stop <nom_instance> multipass stop moncloud Monter un volume multipass mount <nom_volume> <nom_instance> multipass mount $HOME moncloud:/chemain/voulu Transmettre une commande a l'instance multipass exec <nom_instance> -- <la_commande> multipass exec moncloud -- sudo apt update Copier des fichiers multipass copy-files <a_copier> <cible> multipass copy-files moncloud:/chemin/voulu.txt /chemin/local/ multipass copy-files /chemin/local/ moncloud:/chemin/voulu.txt Supprimer une instance multipass delete <nom_instance multipass delete moncloud R\u00e9cup\u00e9rer une instance supprim\u00e9e multipass recover <nom_instance> multipass recover moncloud Purger les instances supprim\u00e9es multipass purge","title":"Utilisation de multipass"},{"location":"cours/docker/","text":"Docker D\u00e9finition Docker est un outil qui peut empaqueter une application et ses d\u00e9pendances dans un conteneur isol\u00e9, qui pourra \u00eatre ex\u00e9cut\u00e9 sur n'importe quel serveur. 451 Research Installation Source: doc Docker Installation de Docker Installation des d\u00e9pendances n\u00e9cessaires: sudo apt install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg2 \\ software-properties-common R\u00e9cup\u00e9ration de la cl\u00e9 du d\u00e9pot: curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add - Tip: mise a jour de l'index apt sudo apt update Installation du moteur Docker sudo apt update && sudo apt-get install docker-ce docker-ce-cli containerd.io R\u00e9daction du Dockerfile Example FROM mcr.microsoft.com/dotnet/core/sdk:3.1 AS build-env WORKDIR /app # Copy csproj and restore as distinct layers COPY *.csproj ./ RUN dotnet restore # Copy everything else and build COPY . ./ RUN dotnet publish -c Release -o out # Build runtime image FROM mcr.microsoft.com/dotnet/core/aspnet:3.1 WORKDIR /app COPY --from = build-env /app/out . EXPOSE 80 ENTRYPOINT [ \"dotnet\" , \"/app/EzDVF.dll\" ]","title":"Docker"},{"location":"cours/docker/#docker","text":"D\u00e9finition Docker est un outil qui peut empaqueter une application et ses d\u00e9pendances dans un conteneur isol\u00e9, qui pourra \u00eatre ex\u00e9cut\u00e9 sur n'importe quel serveur. 451 Research","title":"Docker"},{"location":"cours/docker/#installation","text":"Source: doc Docker Installation de Docker Installation des d\u00e9pendances n\u00e9cessaires: sudo apt install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg2 \\ software-properties-common R\u00e9cup\u00e9ration de la cl\u00e9 du d\u00e9pot: curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add - Tip: mise a jour de l'index apt sudo apt update Installation du moteur Docker sudo apt update && sudo apt-get install docker-ce docker-ce-cli containerd.io","title":"Installation"},{"location":"cours/docker/#redaction-du-dockerfile","text":"Example FROM mcr.microsoft.com/dotnet/core/sdk:3.1 AS build-env WORKDIR /app # Copy csproj and restore as distinct layers COPY *.csproj ./ RUN dotnet restore # Copy everything else and build COPY . ./ RUN dotnet publish -c Release -o out # Build runtime image FROM mcr.microsoft.com/dotnet/core/aspnet:3.1 WORKDIR /app COPY --from = build-env /app/out . EXPOSE 80 ENTRYPOINT [ \"dotnet\" , \"/app/EzDVF.dll\" ]","title":"R\u00e9daction du Dockerfile"},{"location":"cours/github/","text":"GitHub CI D\u00e9finition C'est un service web d'h\u00e9bergement et de gestion de d\u00e9veloppement de logiciels Wikip\u00e9dia Les Github Actions vont nous permettre d'automatiser l'int\u00e9gration de notre code. Construction du workflow Example name : .NET on : push : branches : [ master ] jobs : build : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - name : Setup .NET uses : actions/setup-dotnet@v1 with : dotnet-version : 3.1.x - name : Dotnet Publish run : dotnet publish -c Release -r linux-x64 -p:PublishSingleFile=true - name : Login uses : docker/login-action@v1 with : username : ${{ secrets.DOCKER_USERNAME }} password : ${{ secrets.DOCKER_PASSWORD }} - name : Build&Push uses : docker/build-push-action@v2.3.0 with : tags : louisonsarlinmagnus/ezdvf:latest push : true","title":"GitHub CI"},{"location":"cours/github/#github-ci","text":"D\u00e9finition C'est un service web d'h\u00e9bergement et de gestion de d\u00e9veloppement de logiciels Wikip\u00e9dia Les Github Actions vont nous permettre d'automatiser l'int\u00e9gration de notre code.","title":"GitHub CI"},{"location":"cours/github/#construction-du-workflow","text":"Example name : .NET on : push : branches : [ master ] jobs : build : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - name : Setup .NET uses : actions/setup-dotnet@v1 with : dotnet-version : 3.1.x - name : Dotnet Publish run : dotnet publish -c Release -r linux-x64 -p:PublishSingleFile=true - name : Login uses : docker/login-action@v1 with : username : ${{ secrets.DOCKER_USERNAME }} password : ${{ secrets.DOCKER_PASSWORD }} - name : Build&Push uses : docker/build-push-action@v2.3.0 with : tags : louisonsarlinmagnus/ezdvf:latest push : true","title":"Construction du workflow"},{"location":"cours/kubernetes/","text":"Kubernetes D\u00e9finitions Kubernetes: C'est une plate-forme permettant d'automatiser le d\u00e9ploiement, la mont\u00e9e en charge et la mise en \u0153uvre de conteneurs d'application sur des clusters de serveurs. Wikipedia Node: Un Node aussi appel\u00e9 Worker ou Minion est une machine unique (ou une machine virtuelle) o\u00f9 des conteneurs sont d\u00e9ploy\u00e9s. Wikipedia Pod: Un pod consiste en un ou plusieurs conteneurs qui ont la garantie d'\u00eatre co-localis\u00e9s sur une machine h\u00f4te et peuvent en partager les ressources. Chaque pod dans Kubernetes poss\u00e8de une adresse IP unique \u00e0 l'int\u00e9rieur du cluster. Wikipedia Labels et selectors: On peut attacher des paires cl\u00e9s-valeurs appel\u00e9es \"labels\" \u00e0 n'importe quel objet d'API dans le syst\u00e8me, par exemple les pods et les nodes. Wikipedia Services: Un service Kubernetes est un groupe de pods travaillant ensemble, l'ensemble des pods qui constituent un service sont d\u00e9finis par un label selector. Wikipedia Kubernetes est l' orchestrateur le plus utilis\u00e9. Kubernetes peut: Cr\u00e9er des services applicatifs sur plusieurs conteneurs Planifier leur ex\u00e9cution dans un cluster Garantir leur int\u00e9grit\u00e9 Assurer le monitoring On utilisant Kubernetes on n'a plus qu'a d\u00e9ployer notre code. Kubernetes va s'occuper des courches infrastruture (OS, Stockage, R\u00e9seau) Installation Warning Est-ce que minikube suffit? Avant tout mettre a jour le syst\u00e8me sudo apt-get update sudo apt-get upgrade Installation de minikube et kubeclt minikube Minikube est un outil facilitant l\u2019ex\u00e9cution locale de Kubernetes T\u00e9l\u00e9chargement du binaire wget https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 Attribution des droits d'ex\u00e9cution chmod +x minikube-linux-amd64 Mise dans le PATH sudo mv minikube-linux-amd64 /usr/local/bin/minikube V\u00e9rification de l'installation minikube version kubectl L'outil en ligne de commande de kubernetes T\u00e9l\u00e9chargement du binaire curl -LO https://storage.googleapis.com/kubernetes-release/release/ ` curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt ` /bin/linux/amd64/kubectl Attribution des droits d'ex\u00e9cussion chmod +x ./kubectl Mise dans le PATH sudo mv ./kubectl /usr/local/bin/kubectl V\u00e9rification de l'installation kubectl version -o json Erreur A l'ex\u00e9cussion de la derni\u00e8re commande on re\u00e7oit une erreur: -The connection to the server localhost:8080 was refused - did you specify the right host or port? On pense que puisque nous n'avons lancer aucun cluster il ne peut acc\u00e9der \u00e0 localhost:8080 car il n'y a tout simplement rien Utilisation V\u00e9rification Pour v\u00e9rifi\u00e9 que minikube est bien install\u00e9: minikube version On lance minikube: minikube start","title":"Kubernetes"},{"location":"cours/kubernetes/#kubernetes","text":"D\u00e9finitions Kubernetes: C'est une plate-forme permettant d'automatiser le d\u00e9ploiement, la mont\u00e9e en charge et la mise en \u0153uvre de conteneurs d'application sur des clusters de serveurs. Wikipedia Node: Un Node aussi appel\u00e9 Worker ou Minion est une machine unique (ou une machine virtuelle) o\u00f9 des conteneurs sont d\u00e9ploy\u00e9s. Wikipedia Pod: Un pod consiste en un ou plusieurs conteneurs qui ont la garantie d'\u00eatre co-localis\u00e9s sur une machine h\u00f4te et peuvent en partager les ressources. Chaque pod dans Kubernetes poss\u00e8de une adresse IP unique \u00e0 l'int\u00e9rieur du cluster. Wikipedia Labels et selectors: On peut attacher des paires cl\u00e9s-valeurs appel\u00e9es \"labels\" \u00e0 n'importe quel objet d'API dans le syst\u00e8me, par exemple les pods et les nodes. Wikipedia Services: Un service Kubernetes est un groupe de pods travaillant ensemble, l'ensemble des pods qui constituent un service sont d\u00e9finis par un label selector. Wikipedia Kubernetes est l' orchestrateur le plus utilis\u00e9. Kubernetes peut: Cr\u00e9er des services applicatifs sur plusieurs conteneurs Planifier leur ex\u00e9cution dans un cluster Garantir leur int\u00e9grit\u00e9 Assurer le monitoring On utilisant Kubernetes on n'a plus qu'a d\u00e9ployer notre code. Kubernetes va s'occuper des courches infrastruture (OS, Stockage, R\u00e9seau)","title":"Kubernetes"},{"location":"cours/kubernetes/#installation","text":"Warning Est-ce que minikube suffit? Avant tout mettre a jour le syst\u00e8me sudo apt-get update sudo apt-get upgrade Installation de minikube et kubeclt minikube Minikube est un outil facilitant l\u2019ex\u00e9cution locale de Kubernetes T\u00e9l\u00e9chargement du binaire wget https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 Attribution des droits d'ex\u00e9cution chmod +x minikube-linux-amd64 Mise dans le PATH sudo mv minikube-linux-amd64 /usr/local/bin/minikube V\u00e9rification de l'installation minikube version kubectl L'outil en ligne de commande de kubernetes T\u00e9l\u00e9chargement du binaire curl -LO https://storage.googleapis.com/kubernetes-release/release/ ` curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt ` /bin/linux/amd64/kubectl Attribution des droits d'ex\u00e9cussion chmod +x ./kubectl Mise dans le PATH sudo mv ./kubectl /usr/local/bin/kubectl V\u00e9rification de l'installation kubectl version -o json Erreur A l'ex\u00e9cussion de la derni\u00e8re commande on re\u00e7oit une erreur: -The connection to the server localhost:8080 was refused - did you specify the right host or port? On pense que puisque nous n'avons lancer aucun cluster il ne peut acc\u00e9der \u00e0 localhost:8080 car il n'y a tout simplement rien","title":"Installation"},{"location":"cours/kubernetes/#utilisation","text":"V\u00e9rification Pour v\u00e9rifi\u00e9 que minikube est bien install\u00e9: minikube version On lance minikube: minikube start","title":"Utilisation"},{"location":"mise_en_route/comm_ssh/","text":"Communication SSH avec le serveur Pr\u00e9-requis: Cr\u00e9er une cl\u00e9e SSH qui permettra de communiquer de mani\u00e8re s\u00e9curis\u00e9e Etant donn\u00e9e que le serveur sera install\u00e9 dans une autre pi\u00e8ce et que je souhaite pouvoir le configurer confortablement. Je vais mettre en place une communication ssh. SSH (Secure Shell): Il permet la connexion \u00e0 une machine distante (serveur) via une liaison s\u00e9curis\u00e9e dans le but de transf\u00e9rer des fichiers ou des commandes. Une fois les 2 partie Setup r\u00e9alis\u00e9e il suffit de se connecter avec la ligne: ssh <username>@<adresse_ip> -p <port> (ex: ssh louison@192.168.1.11 -p 22 ) Setup SSH c\u00f4t\u00e9 Serveur Il \"suffit\": d'autoriser la connexion par SSH: sudo ufw allow ssh de d\u00e9marrer le service SSH: sudo systemctl start ssh ou sudo service ssh start Setup SSH c\u00f4t\u00e9 Client Du c\u00f4t\u00e9 client j'utilise d\u00e9j\u00e0 un Windows Subsyst\u00e8me Linux (Ubuntu 20.04 LTS). Il \"suffit\": d'autoriser la connexion par SSH: sudo ufw allow ssh de d\u00e9marrer le service SSH: sudo systemctl start ssh ou sudo service ssh start Connection par Hamachi via internet Setup d'Hamachi Installation wget https://www.vpn.net/installers/logmein-hamachi_2.1.0.198-1_amd64.deb sudo apt -y install ./logmein-hamachi_2.1.0.198-1_amd64.deb sudo hamachi check-update Cr\u00e9ation de mon profil sudo hamachi login sudo hamachi set-nick louison Cr\u00e9ation du r\u00e9seau sudo hamachi create <R\u00e9seau> <mot_de_passe> Rejoindre et quitter le r\u00e9seau sudo hamachi join <R\u00e9seau> <mot_de_passe> sudo hamachi list sudo hamachi leave <R\u00e9seau>","title":"Communication SSH"},{"location":"mise_en_route/comm_ssh/#communication-ssh-avec-le-serveur","text":"Pr\u00e9-requis: Cr\u00e9er une cl\u00e9e SSH qui permettra de communiquer de mani\u00e8re s\u00e9curis\u00e9e Etant donn\u00e9e que le serveur sera install\u00e9 dans une autre pi\u00e8ce et que je souhaite pouvoir le configurer confortablement. Je vais mettre en place une communication ssh. SSH (Secure Shell): Il permet la connexion \u00e0 une machine distante (serveur) via une liaison s\u00e9curis\u00e9e dans le but de transf\u00e9rer des fichiers ou des commandes. Une fois les 2 partie Setup r\u00e9alis\u00e9e il suffit de se connecter avec la ligne: ssh <username>@<adresse_ip> -p <port> (ex: ssh louison@192.168.1.11 -p 22 )","title":"Communication SSH avec le serveur"},{"location":"mise_en_route/comm_ssh/#setup-ssh-cote-serveur","text":"Il \"suffit\": d'autoriser la connexion par SSH: sudo ufw allow ssh de d\u00e9marrer le service SSH: sudo systemctl start ssh ou sudo service ssh start","title":"Setup SSH c\u00f4t\u00e9 Serveur"},{"location":"mise_en_route/comm_ssh/#setup-ssh-cote-client","text":"Du c\u00f4t\u00e9 client j'utilise d\u00e9j\u00e0 un Windows Subsyst\u00e8me Linux (Ubuntu 20.04 LTS). Il \"suffit\": d'autoriser la connexion par SSH: sudo ufw allow ssh de d\u00e9marrer le service SSH: sudo systemctl start ssh ou sudo service ssh start","title":"Setup SSH c\u00f4t\u00e9 Client"},{"location":"mise_en_route/comm_ssh/#connection-par-hamachi-via-internet","text":"Setup d'Hamachi Installation wget https://www.vpn.net/installers/logmein-hamachi_2.1.0.198-1_amd64.deb sudo apt -y install ./logmein-hamachi_2.1.0.198-1_amd64.deb sudo hamachi check-update Cr\u00e9ation de mon profil sudo hamachi login sudo hamachi set-nick louison Cr\u00e9ation du r\u00e9seau sudo hamachi create <R\u00e9seau> <mot_de_passe> Rejoindre et quitter le r\u00e9seau sudo hamachi join <R\u00e9seau> <mot_de_passe> sudo hamachi list sudo hamachi leave <R\u00e9seau>","title":"Connection par Hamachi via internet"},{"location":"mise_en_route/ubuntu_install/","text":"Installation d'Ubuntu Version choisi: 20.04 LTS Server Etape 1: Cr\u00e9ation de la cl\u00e9 Bootable T\u00e9l\u00e9cherger l' ISO d'Ubuntu 20.04 Veriffier l'int\u00e9grit\u00e9 du fichier avec le SHA-256 Cr\u00e9er une cl\u00e9 USB Bootable (Rufus) Etape 2: Installation d'Ubuntu D\u00e9marrer le PC avec la cl\u00e9 branch\u00e9e Choisir \"Ubuntu\" puis \"Install Ubuntu\" Choisir \"Effacer le disque et installer Ubuntu\" Une fois l'installation finie cliquer sur \"Redemarrer\" et enlever la cl\u00e9 USB Choisir le configurer Livepatch Installer les derni\u00e8res mises \u00e0 jour","title":"Installation d'Ubuntu"},{"location":"mise_en_route/ubuntu_install/#installation-dubuntu","text":"Version choisi: 20.04 LTS Server","title":"Installation d'Ubuntu"},{"location":"mise_en_route/ubuntu_install/#etape-1-creation-de-la-cle-bootable","text":"T\u00e9l\u00e9cherger l' ISO d'Ubuntu 20.04 Veriffier l'int\u00e9grit\u00e9 du fichier avec le SHA-256 Cr\u00e9er une cl\u00e9 USB Bootable (Rufus)","title":"Etape 1: Cr\u00e9ation de la cl\u00e9 Bootable"},{"location":"mise_en_route/ubuntu_install/#etape-2-installation-dubuntu","text":"D\u00e9marrer le PC avec la cl\u00e9 branch\u00e9e Choisir \"Ubuntu\" puis \"Install Ubuntu\" Choisir \"Effacer le disque et installer Ubuntu\" Une fois l'installation finie cliquer sur \"Redemarrer\" et enlever la cl\u00e9 USB Choisir le configurer Livepatch Installer les derni\u00e8res mises \u00e0 jour","title":"Etape 2: Installation d'Ubuntu"},{"location":"services/minecraft/","text":"Minecraft","title":"Minecraft"},{"location":"services/minecraft/#minecraft","text":"","title":"Minecraft"},{"location":"services/nextcloud/","text":"Nextcloud","title":"Nextcloud"},{"location":"services/nextcloud/#nextcloud","text":"","title":"Nextcloud"},{"location":"services/plex/","text":"Plex","title":"Plex"},{"location":"services/plex/#plex","text":"","title":"Plex"},{"location":"tutos/docker-compose/","text":"Test avec Nextcloud On va suivre le tuto de La Grotte du Barbu . On commence par se connecter sur le server (en SSH toujours). Puis on clone le git repo avec toutes ressources n\u00e9cessaires: https://www.grottedubarbu.fr/nextcloud-docker-traefik/ On se position ( cd awesome-traefik/traefik ) Puis on modifie le fichier traefik.yaml : nano traefik.yaml . Il suffit de changer l'adresse mail en bas du fichier. Une fois enregistr\u00e9 on peut \"lancer\" le docker-compose up : sudo docker-compose up -d Ensuite on se d\u00e9place dans nextcloud : cd ../nextcloud . On modifie les secrets en faisant echo <secret> > secrets/<fichier.txt> pour les 3 fichiers (mysql-database.txt, mysql-password.txt, mysql-user.txt). Attention L'ajout des param\u00e8tres n'a pas \u00e9t\u00e9 pris en compte et je ne sais pas pourquoi Puis pour arr\u00eater et supprimer les containers on fait: sudo docker-compose stop puis sudo docker-compose rm Enfin on ser replace cd ../traefik et on arr\u00eate et supprime les containers: sudo docker-compose stop puis sudo docker-compose rm Essai docker-compose.yml Le fichier s'appelle par d\u00e9faut docker-compose.yml version : '3.7' services : database : image : mariadb:10 command : --transaction-isolation=READ-COMMITTED --binlog-format=ROW restart : unless-stopped environment : MYSQL_RANDOM_ROOT_PASSWORD : 'yes' MYSQL_USER_FILE : '/run/secrets/mysql-user' MYSQL_DATABASE_FILE : '/run/secrets/mysql-database' MYSQL_PASSWORD_FILE : '/run/secrets/mysql-password' secrets : - mysql-user - mysql-database - mysql-password networks : - lan volumes : - db:/var/lib/mysql nextcloud : depends_on : - database image : nextcloud:18 restart : unless-stopped environment : MYSQL_HOST : 'database' MYSQL_DATABASE_FILE : '/run/secrets/mysql-database' MYSQL_USER_FILE : '/run/secrets/mysql-user' MYSQL_PASSWORD_FILE : '/run/secrets/mysql-password' NEXTCLOUD_ADMIN_PASSWORD : ${NEXTCLOUD_ADMIN_PASSWORD} NEXTCLOUD_ADMIN_USER : ${NEXTCLOUD_ADMIN_USER} NEXTCLOUD_TRUSTED_DOMAINS : ${NEXTCLOUD_URL} secrets : - mysql-user - mysql-database - mysql-password networks : - lan - traefik_web volumes : - html:/var/www/html labels : traefik.enable : true traefik.docker.network : traefik_web traefik.http.routers.nextcloud.entrypoints : websecure traefik.http.routers.nextcloud.rule : 'Host(`${NEXTCLOUD_URL}`)' traefik.http.services.nextcloud.loadbalancer.server.port : 80 volumes : db : html : networks : traefik_web : external : true lan : secrets : mysql-user : file : ./secrets/mysql-user.txt mysql-database : file : ./secrets/mysql-database.txt mysql-password : file : ./secrets/mysql-password.txt","title":"Docker-compose"},{"location":"tutos/docker-compose/#test-avec-nextcloud","text":"On va suivre le tuto de La Grotte du Barbu . On commence par se connecter sur le server (en SSH toujours). Puis on clone le git repo avec toutes ressources n\u00e9cessaires: https://www.grottedubarbu.fr/nextcloud-docker-traefik/ On se position ( cd awesome-traefik/traefik ) Puis on modifie le fichier traefik.yaml : nano traefik.yaml . Il suffit de changer l'adresse mail en bas du fichier. Une fois enregistr\u00e9 on peut \"lancer\" le docker-compose up : sudo docker-compose up -d Ensuite on se d\u00e9place dans nextcloud : cd ../nextcloud . On modifie les secrets en faisant echo <secret> > secrets/<fichier.txt> pour les 3 fichiers (mysql-database.txt, mysql-password.txt, mysql-user.txt). Attention L'ajout des param\u00e8tres n'a pas \u00e9t\u00e9 pris en compte et je ne sais pas pourquoi Puis pour arr\u00eater et supprimer les containers on fait: sudo docker-compose stop puis sudo docker-compose rm Enfin on ser replace cd ../traefik et on arr\u00eate et supprime les containers: sudo docker-compose stop puis sudo docker-compose rm","title":"Test avec Nextcloud"},{"location":"tutos/docker-compose/#essai","text":"docker-compose.yml Le fichier s'appelle par d\u00e9faut docker-compose.yml version : '3.7' services : database : image : mariadb:10 command : --transaction-isolation=READ-COMMITTED --binlog-format=ROW restart : unless-stopped environment : MYSQL_RANDOM_ROOT_PASSWORD : 'yes' MYSQL_USER_FILE : '/run/secrets/mysql-user' MYSQL_DATABASE_FILE : '/run/secrets/mysql-database' MYSQL_PASSWORD_FILE : '/run/secrets/mysql-password' secrets : - mysql-user - mysql-database - mysql-password networks : - lan volumes : - db:/var/lib/mysql nextcloud : depends_on : - database image : nextcloud:18 restart : unless-stopped environment : MYSQL_HOST : 'database' MYSQL_DATABASE_FILE : '/run/secrets/mysql-database' MYSQL_USER_FILE : '/run/secrets/mysql-user' MYSQL_PASSWORD_FILE : '/run/secrets/mysql-password' NEXTCLOUD_ADMIN_PASSWORD : ${NEXTCLOUD_ADMIN_PASSWORD} NEXTCLOUD_ADMIN_USER : ${NEXTCLOUD_ADMIN_USER} NEXTCLOUD_TRUSTED_DOMAINS : ${NEXTCLOUD_URL} secrets : - mysql-user - mysql-database - mysql-password networks : - lan - traefik_web volumes : - html:/var/www/html labels : traefik.enable : true traefik.docker.network : traefik_web traefik.http.routers.nextcloud.entrypoints : websecure traefik.http.routers.nextcloud.rule : 'Host(`${NEXTCLOUD_URL}`)' traefik.http.services.nextcloud.loadbalancer.server.port : 80 volumes : db : html : networks : traefik_web : external : true lan : secrets : mysql-user : file : ./secrets/mysql-user.txt mysql-database : file : ./secrets/mysql-database.txt mysql-password : file : ./secrets/mysql-password.txt","title":"Essai"}]}